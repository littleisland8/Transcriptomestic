configfile: "config/config.yaml"

include: "rules/fastqc.smk"
include: "rules/fastp.smk"
include: "rules/STAR.smk"
include: "rules/hisat2.smk"
include: "rules/BigWig.smk"
include: "rules/htseq.smk"
include: "rules/featureCounts.smk"
include: "rules/salmon.smk"
include: "rules/DESeqFromHTSeqCount.smk"
include: "rules/DESeqFromFeatureCounts.smk"
include: "rules/multiqc.smk"
#include: "rules/arriba.smk"

rule BigWig:
	input:
		expand(f"alignments/{{sample}}.STAR.bw", sample=config["samples"].values()),
		expand(f"alignments/{{sample}}.hisat2.bw", sample=config["samples"].values())

rule STAR_HTSeq:
	input:
		expand(config["pipedir"] + "/" + f"fastqc/{{sample}}_{{strand}}_fastqc.html", sample=config["samples"].values(),strand=config["strand"].values()),
		expand(f"count/htseq/STAR/{{sample}}.STAR.gene.count", sample=config["samples"].values()),
		f"qc/multiqc_report.html"
		directory("results/STAR_HTSeq")

rule STAR_featureCounts:
	input:
		expand(f"qc/{{sample}}_{{strand}}_fastqc.html", sample=config["samples"].values(), strand=config["strand"].values()),
		expand(f"qc/{{sample}}_{{strand}}_tr_fastqc.html", sample=config["samples"].values(), strand=config["strand"].values()),
		expand(f"count/featureCounts/STAR/{{sample}}.STAR.gene.count.featureCounts.tsv", sample=config["samples"].values()),
		directory("results/STAR_featureCounts")

rule Hisat2_HTSeq:
	input:
		expand(f"qc/{{sample}}_{{strand}}_fastqc.html", sample=config["samples"].values(), strand=config["strand"].values()),
		expand(f"qc/{{sample}}_{{strand}}_tr_fastqc.html", sample=config["samples"].values(), strand=config["strand"].values()),
		expand(f"count/htseq/hisat2/{{sample}}.hisat2.gene.count", sample=config["samples"].values()),
		directory("results/Hisat2_HTSeq")

rule Hisat2_featureCounts:
	input:
		expand(f"qc/{{sample}}_{{strand}}_fastqc.html", sample=config["samples"].values(), strand=config["strand"].values()),
		expand(f"qc/{{sample}}_{{strand}}_tr_fastqc.html", sample=config["samples"].values(), strand=config["strand"].values()),
		expand(f"count/featureCounts/hisat2/{{sample}}.hisat2.gene.count.featureCounts.tsv", sample=config["samples"].values()),
		directory("results/Hisat2_featureCounts")

rule Salmon:
	input:
		directory("resources/salmon_idx"),
		expand(f"count/{{sample}}_salmon/quant.sf", sample=config["samples"].values()),
		directory("results/Salmon")

rule GeneFusion:
	input:
		expand(f"fusion/{{sample}}.fusions.tsv", sample=config["samples"].values()),
		expand(f"fusion/{{sample}}.fusions.srt.vcf.gz.tbi", sample=config["samples"].values()),
		expand(f"fusion/{{sample}}.lactate.fusions.vcf.gz", sample=config["samples"].values()),
		expand(f"fusion/{{sample}}.lactate.fusions.tsv", sample=config["samples"].values())
